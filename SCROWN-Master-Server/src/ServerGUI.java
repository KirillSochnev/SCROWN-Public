
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.sql.Statement;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.SwingWorker;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

public class ServerGUI extends javax.swing.JFrame {
    
    private Server server = null;
    
    private boolean isServerStarted = false;
    
    /**
     * Creates new form ServerGUI
     */
    public ServerGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        connectToDB = new javax.swing.JButton();
        dbConnectionStatus = new javax.swing.JLabel();
        dbAddressTextField = new javax.swing.JTextField();
        dbAddressLabel = new javax.swing.JLabel();
        dbUsernameTextField = new javax.swing.JTextField();
        dbPasswordTextField = new javax.swing.JTextField();
        dbUsernameLabel = new javax.swing.JLabel();
        dbPasswordLabel = new javax.swing.JLabel();
        disconnectFromDB = new javax.swing.JButton();
        startServerButton = new javax.swing.JButton();
        truncateTableTextField = new javax.swing.JTextField();
        truncateTableButton = new javax.swing.JButton();
        stopServerButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        connectToDB.setText("Connect to DB");
        connectToDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectToDBActionPerformed(evt);
            }
        });

        dbConnectionStatus.setText("Status: ");

        dbAddressTextField.setText("zenit.senecac.on.ca/bts530_133a06");

        dbAddressLabel.setText("DB Address");

        dbUsernameTextField.setText("bts530_133a06");

        dbPasswordTextField.setForeground(new java.awt.Color(255, 255, 255));
        dbPasswordTextField.setText("ssMH3677");

        dbUsernameLabel.setText("username");

        dbPasswordLabel.setText("password");

        disconnectFromDB.setText("Disconnect from DB");
        disconnectFromDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectFromDBActionPerformed(evt);
            }
        });

        startServerButton.setText("Strart Server");
        startServerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startServerButtonActionPerformed(evt);
            }
        });

        truncateTableTextField.setText("Accelerometer");
        truncateTableTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                truncateTableTextFieldActionPerformed(evt);
            }
        });

        truncateTableButton.setText("TRUNCATE table");
        truncateTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                truncateTableButtonActionPerformed(evt);
            }
        });

        stopServerButton.setText("Stop Server");
        stopServerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopServerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dbConnectionStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(dbPasswordTextField)
                                .addComponent(dbUsernameTextField)
                                .addComponent(dbAddressTextField))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dbAddressLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(dbUsernameLabel)
                                .addComponent(dbPasswordLabel)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(startServerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(connectToDB, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                                    .addComponent(truncateTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(stopServerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(disconnectFromDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(truncateTableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(22, 22, 22))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {connectToDB, disconnectFromDB, startServerButton, stopServerButton, truncateTableButton, truncateTableTextField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dbAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dbAddressLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dbUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dbUsernameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dbPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dbPasswordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectToDB)
                    .addComponent(disconnectFromDB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(truncateTableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(truncateTableButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startServerButton)
                    .addComponent(stopServerButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dbConnectionStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectToDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectToDBActionPerformed
        if(server == null)
            server = new Server(dbConnectionStatus);
        server.connectToDB(dbAddressTextField.getText(), dbUsernameTextField.getText(), dbPasswordTextField.getText());
    }//GEN-LAST:event_connectToDBActionPerformed

    private void disconnectFromDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectFromDBActionPerformed
        if(server != null)
            server.disconnectFromDB();
        else
            dbConnectionStatus.setText("Status: Please start DB first");
    }//GEN-LAST:event_disconnectFromDBActionPerformed

    private void truncateTableTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_truncateTableTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_truncateTableTextFieldActionPerformed

    private void truncateTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_truncateTableButtonActionPerformed
        if(server != null)
            server.truncateTable(truncateTableTextField.getText());
        else
            dbConnectionStatus.setText("Status: Please start DB first");
    }//GEN-LAST:event_truncateTableButtonActionPerformed

    private void startServerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startServerButtonActionPerformed
        if(server != null){
            isServerStarted = true;
            server.execute();
        }else
            dbConnectionStatus.setText("Status: Please start DB first");
    }//GEN-LAST:event_startServerButtonActionPerformed

    private void stopServerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopServerButtonActionPerformed
        if(server != null && isServerStarted){
            server.close();
            server = null;
            isServerStarted = false;
            dbConnectionStatus.setText("Status: Server and DB connections are closed");
        }else{
            dbConnectionStatus.setText("Status: Please start Server first");
        }
        
    }//GEN-LAST:event_stopServerButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectToDB;
    private javax.swing.JLabel dbAddressLabel;
    private javax.swing.JTextField dbAddressTextField;
    private javax.swing.JLabel dbConnectionStatus;
    private javax.swing.JLabel dbPasswordLabel;
    private javax.swing.JTextField dbPasswordTextField;
    private javax.swing.JLabel dbUsernameLabel;
    private javax.swing.JTextField dbUsernameTextField;
    private javax.swing.JButton disconnectFromDB;
    private javax.swing.JButton startServerButton;
    private javax.swing.JButton stopServerButton;
    private javax.swing.JButton truncateTableButton;
    private javax.swing.JTextField truncateTableTextField;
    // End of variables declaration//GEN-END:variables
}
